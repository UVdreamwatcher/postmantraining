{
	"info": {
		"_postman_id": "77679d51-6f68-4f44-8c99-2806bfe1ac8c",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Pet Controller",
			"item": [
				{
					"name": "Post pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d82afab0-9482-4e83-bfc2-8d8d6f5c58d8",
								"exec": [
									"let response = pm.response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"let jsonData = JSON.parse(response);\r",
									"\r",
									"let id = jsonData.id.replace('\"','');\r",
									"pm.collectionVariables.set(\"petId\", id);\r",
									"\r",
									"let name = jsonData.name;\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"petName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Response has available status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('available');\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is set to JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms and above 100ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000).and.to.be.above(100);\r",
									"});\r",
									"\r",
									"// create conflict, message 1"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fa6e8db3-f0c2-4410-9be0-0f01d3cbae16",
								"exec": [
									"console.clear();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c995a0e7-de7e-42e6-974b-f16fb24c29c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": []
				},
				{
					"name": "Get pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e475e574-f6ed-4980-ad65-cd5e84f45ce3",
								"exec": [
									"let response = pm.response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"let jsonData = JSON.parse(response);\r",
									"let id = jsonData.id.replace('\"','');\r",
									"let name = pm.collectionVariables.get(\"petName\");\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet name\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(name);\r",
									"});\r",
									"\r",
									"pm.test(\"Get Pet request has OK status\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bb3411d0-08b5-4c70-bfa9-40ce2a841afc",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "24b232d6-e721-4aee-a210-ad07e5332a9c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{petId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get pets by status (available)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4e15ab50-36ad-414b-92cf-7173b738feea",
								"exec": [
									"console.clear();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e3fdef9e-a9e1-4da1-bba1-d65bc58530a7",
								"exec": [
									"let response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body returns an array\", function() {\r",
									"   pm.expect(response).to.be.an('array'); \r",
									"});\r",
									"\r",
									"pm.test(\"Status available is displayed for all retrieved objects from the array\", function(){\r",
									"    const array = response;\r",
									"    pm.expect(array.length).to.be.above(0);\r",
									"    for (let i = 1; i < array.length; i++) {\r",
									"        pm.expect(array[i].status).to.eql(\"available\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "041b74e6-08cf-4582-b630-b38825283f54",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available",
									"description": "Available values: available, pending, sold"
								},
								{
									"key": "status",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sold",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c3faae98-f03c-4c3e-9cc6-6f5431fefd20",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2bd3b09c-eb9e-4dcf-b1db-60684f08996f",
								"exec": [
									"let response = pm.response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"let jsonData = JSON.parse(response);\r",
									"let id = jsonData.id.replace('\"','');\r",
									"\r",
									"let name = jsonData.name;\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(id);\r",
									"});\r",
									"pm.test(\"Fields are updated\", function () {\r",
									"    pm.expect(jsonData.tags[0].name).to.eql(\"update\");\r",
									"    pm.expect(jsonData.name).to.eql(\"Sasiska\");\r",
									"    pm.expect(jsonData.status).to.eql(\"sold\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3b41b8a2-869a-4c69-acc8-5b3334907ef7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"Sasiska\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"update\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": []
				},
				{
					"name": "Delete pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f8c80b65-a422-415a-9dea-2af3f14ba6b6",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "48096fda-3090-431f-9019-c48a7f5d367d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const getPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet/' + pm.collectionVariables.get('petId'),\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(getPetRequest, function(error, getRequest) {\r",
									"    pm.test(\"Status code for deleted pet is 404\", function() {\r",
									"        pm.expect(getRequest.code).to.eql(404);\r",
									"    });\r",
									"    pm.test(\"Pet not found message is returned\", function() {\r",
									"        const responseBody = JSON.parse(getRequest.text());\r",
									"        pm.expect(responseBody.message).to.include(\"Pet not found\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "a44c7cc5-29ec-475b-b063-2280b88b96f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/:petId/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								":petId",
								""
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{petId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "540df176-f80b-45d5-8d80-a7195bcee1d6"
		},
		{
			"name": "Store Controller",
			"item": [
				{
					"name": "Post order",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96e30893-3999-4505-b1d4-60f4ac56adac",
								"exec": [
									"let response = pm.response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"let jsonData = JSON.parse(response);\r",
									"let id = jsonData.id.replace('\"',''); \r",
									"\r",
									"pm.environment.set(\"orderId\", id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid order id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has placed status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql('placed');\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is set to JSON\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms and above 100ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000).and.to.be.above(100);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c9051f22-706c-49d6-91ce-29575e0b4f56",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "300079fd-fa72-430e-bf4f-73d00911a54c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": {{petId}},\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2024-04-18T08:20:49.243Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/store/order/"
					},
					"response": []
				},
				{
					"name": "Find purchase by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc73004f-d44f-42ca-9c65-d74c467e4cb3",
								"exec": [
									"let response = pm.response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"let jsonData = JSON.parse(response);\r",
									"let id = jsonData.id.replace('\"','');\r",
									"let petId = jsonData.petId.replace('\"','');\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid order id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has valid pet id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(petId);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ea51c65d-14bf-4e77-a1cc-c76a11450891",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"\r",
									"    const postOrderRequest = {\r",
									"        url: 'https://petstore.swagger.io/v2/store/order',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Content-Type': 'application/json'\r",
									"        },\r",
									"        body: JSON.stringify({\r",
									"            \"id\": 0,\r",
									"            \"petId\": pm.collectionVariables.get('petId'),\r",
									"            \"quantity\": 1,\r",
									"            \"shipDate\": \"2024-04-18T08:20:49.243Z\",\r",
									"            \"status\": \"placed\",\r",
									"            \"complete\": true\r",
									"        })\r",
									"    };\r",
									"    pm.sendRequest(postOrderRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"orderId\", id);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "d04aa05b-4407-422c-8484-880e59a9a7a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get inventory by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64e03db1-6a76-4382-b663-8bdde67f0e52",
								"exec": [
									"let response = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body returns an object\", function() {\r",
									"   pm.expect(response).to.be.an('object'); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "672d1837-66ff-4e81-b600-79ba3ddd7a29",
								"exec": [
									"console.clear();"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8ac085ef-74f2-455c-8429-24ca79735ed9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/store/inventory"
					},
					"response": []
				},
				{
					"name": "Delete purchase by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc73004f-d44f-42ca-9c65-d74c467e4cb3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const getOrderRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/order/' + pm.collectionVariables.get('orderId'),\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(getOrderRequest, function(error, getRequest) {\r",
									"    pm.test(\"Status code for deleted pet is 404\", function() {\r",
									"        pm.expect(getRequest.code).to.eql(404);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ea51c65d-14bf-4e77-a1cc-c76a11450891",
								"exec": [
									"console.clear();\r",
									"\r",
									"let name = pm.collectionVariables.replaceIn(\"{{$randomFirstName}}\");\r",
									"pm.collectionVariables.set(\"petName\", name);\r",
									"\r",
									"const postPetRequest = {\r",
									"    url: 'https://petstore.swagger.io/v2/pet',\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"\t    'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"id\": 0,\r",
									"        \"category\": {\r",
									"            \"id\": 0,\r",
									"            \"name\": \"string\"\r",
									"        },\r",
									"        \"name\": pm.collectionVariables.get(\"petName\"),\r",
									"        \"photoUrls\": [\r",
									"            \"string\"\r",
									"        ],\r",
									"        \"tags\": [\r",
									"            {\r",
									"                \"id\": 0,\r",
									"                \"name\": \"string\"\r",
									"            }\r",
									"        ],\r",
									"        \"status\": \"available\"\r",
									"    })\r",
									"};\r",
									"\r",
									"pm.sendRequest(postPetRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"petId\", id);\r",
									"\r",
									"    const postOrderRequest = {\r",
									"        url: 'https://petstore.swagger.io/v2/store/order',\r",
									"        method: 'POST',\r",
									"        header: {\r",
									"            'Content-Type': 'application/json'\r",
									"        },\r",
									"        body: JSON.stringify({\r",
									"            \"id\": 0,\r",
									"            \"petId\": pm.collectionVariables.get('petId'),\r",
									"            \"quantity\": 1,\r",
									"            \"shipDate\": \"2024-04-18T08:20:49.243Z\",\r",
									"            \"status\": \"placed\",\r",
									"            \"complete\": true\r",
									"        })\r",
									"    };\r",
									"    pm.sendRequest(postOrderRequest, function (err, response) {\r",
									"\tlet responseText = response.text().replace(/([^\"\\w-])([-0-9.]{8,100})([^\"\\w-])/g, '$1\\\"$2\\\"$3');\r",
									"\tlet jsonData = JSON.parse(responseText);\r",
									"\tlet id = jsonData.id.replace('\"','');\r",
									"\r",
									"    pm.collectionVariables.set(\"orderId\", id);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c09cbd87-8d51-45c5-9488-635e18e621b8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/:orderId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "aabf5609-bf04-4c0e-9b58-386d7bd72bec"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3a4bcbdd-f7b4-448b-b1d3-86589048b5c7",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e2fc5260-16e2-41a3-bb36-ab7714d327e7",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "orderId",
			"value": "YOUR ORDER ID"
		},
		{
			"key": "petName",
			"value": "YOUR PET NAME"
		},
		{
			"key": "petId",
			"value": "YOUR PET ID"
		},
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}